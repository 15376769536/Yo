@charset "UTF-8";
/**
 * Yo框架全局Variables
 -----------------------
 * Yo基础变量map，如果不想定义某属性，将其value设置为null；
 * Yo仅使用2种长度单位：px用于边框，rem用于除边框之外的所有地方
 *
 * @class variables
 * @module Yo
 */
/**
 * Yo框架全局Variables
 -----------------------
 * Yo基础变量map，如果不想定义某属性，将其value设置为null；
 * Yo仅使用2种长度单位：px用于边框，rem用于除边框之外的所有地方
 *
 * @class variables
 * @module Yo
 */
/**
 * Yo框架全局基础方法
 -----------------------
 * Yo内置了包括响应式方案，CSS3兼容性方案，厂商前缀方案，iconfont方案，flex布局等全局方法
 *
 * @class classes
 * @module Yo
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $property 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 四则运算
 * @method calc
 * @param {String} $property 指定需要进行计算的CSS属性
 * @param {String} $value 与原生CSS语法一致，使用方式如：@include calc(width, 100% - 0.1rem);
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与w3c最新原生语法一致
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 滤镜
 * @method filter
 * @param {String} $filter 取值与原生语法一致
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义背景图像缩放（Android Browser2.3.*还需要厂商前缀）
 * @method background-size
 * @param {String | Length} $background-size 指定背景图缩放值
 */
/**
 * 定义背景裁减（Android Browser2.3.*还需要厂商前缀）
 * @method background-clip
 * @param {String} $background-clip 指定背景图缩放值
 */
/**
 * 定义背景显示区域（Android Browser2.3.*还需要厂商前缀）
 * @method background-origin
 * @param {String} $background-origin 指定背景图缩放值
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义圆角
 * @method border-radius
 * @param {String} $border-radius 取值与原生语法一致
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * 定义显示类型为伸缩盒
 * @method flexbox
 * @param {String} $flexbox 默认值：flex，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素如何分配空间
 * @method flex
 * @param {String} $flex 默认值：1，取值与最新原生语法一致
 * @param {String} $direction 默认值: row
 */
/**
 * 定义伸缩盒子元素的排版顺序
 * @method order
 * @param {String} $order 默认值：1，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的流动方向
 * @method flex-direction
 * @param {String} $flex-direction 默认值：row，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素溢出排版
 * @method flex-wrap
 * @param {String} $flex-wrap 默认值：nowrap，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的水平对齐方式
 * @method justify-content
 * @param {String} $justify-content 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的垂直对齐方式
 * @method align-items
 * @param {String} $align-items 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素自身的垂直对齐方式
 * @method align-self
 * @param {String} $align-self 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义root root-scroll
 * @method root-scroll
 * @param {String} $root-scroll 指定scroll类型，取值overflow属性的标准值
 */
/**
 * 定义是否有滚动条
 * @method overflow
 * @param {String} $overflow 默认值：auto，取值与最新原生语法一致
 */
/**
 * 生成矩形方法
 * @method rect
 * @param {Length} $width 定义矩形的长度
 * @param {Length} $height 定义矩形的高度
 */
/**
 * 生成正方形方法
 * @method square
 * @param {Length} $size 定义正方形的边长
 */
/**
 * 生成圆形方法
 * @method circle
 * @param {Length} $size 定义圆的半径长度
 * @param {Length} $radius 定义圆的圆角半径长度
 */
/**
 * 生成全屏方法
 * @method fullscreen
 * @param {Integer} $z-index 定义层叠级别
 */
/**
 * 清除浮动方案
 * @method clearfix
 */
/**
 * 链接处理方法
 * @method link
 * @param {Color} $color 定义链接颜色
 */
/**
 * 强制换行方案
 * @method wrap
 */
/**
 * 单行文本溢出显示方案
 * @method ellipsis
 * @param {Boolen} $ellipsis 定义是否需要省略号
 */
/**
 * 文字隐藏方案
 * @method texthide
 */
/**
 * 清除间隙方案-容器
 * @method killspace
 */
/**
 * 清除间隙方案-子级
 * @method killspace-item
 */
/**
 * 未知尺寸元素垂直居中解决方案-容器
 * @method valign
 */
/**
 * 未知尺寸元素垂直居中解决方案-子级
 * @method valign-item
 */
/**
 * 已知尺寸元素垂直居中解决方案
 * @method alignment
 * @param {Length} $width 居中元素的宽度
 * @param {Length} $height 居中元素的高度
 */
/**
 * Yo框架全局Reset
 -----------------------
 * Yo重置Mobile及高级浏览器上常见的差异
 *
 * @class reset
 * @module Yo
 */
*,
::before,
::after {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  -webkit-tap-highlight-color: transparent;
}

html {
  background-color: #fafafa;
  color: #212121;
  font-size: 100px;
  -webkit-user-select: none;
  user-select: none;
}
@media (min--moz-device-pixel-ratio: 1.5), (-webkit-min-device-pixel-ratio: 1.5), (min-device-pixel-ratio: 1.5), (min-resolution: 144dpi), (min-resolution: 1.5dppx) {
  html[ios="true"] {
    font-size: 200px;
  }
}
@media (min--moz-device-pixel-ratio: 2.5), (-webkit-min-device-pixel-ratio: 2.5), (min-device-pixel-ratio: 2.5), (min-resolution: 240dpi), (min-resolution: 2.5dppx) {
  html[ios="true"] {
    font-size: 300px;
  }
}

body {
  margin: 0;
  font-size: 14px;
  line-height: 1.5;
  font-family: Helvetica Neue, Helvetica, STHeiTi, sans-serif;
}

@media (min--moz-device-pixel-ratio: 1.5), (-webkit-min-device-pixel-ratio: 1.5), (min-device-pixel-ratio: 1.5), (min-resolution: 144dpi), (min-resolution: 1.5dppx) {
  html[ios="true"] body {
    font-size: 28px;
  }
}
@media (min--moz-device-pixel-ratio: 2.5), (-webkit-min-device-pixel-ratio: 2.5), (min-device-pixel-ratio: 2.5), (min-resolution: 240dpi), (min-resolution: 2.5dppx) {
  html[ios="true"] body {
    font-size: 42px;
  }
}

ul,
ol,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
figure,
form,
fieldset,
legend,
input,
textarea,
button,
p,
blockquote,
th,
td,
pre,
xmp {
  margin: 0;
  padding: 0;
}

input,
textarea,
button,
select,
pre,
xmp,
tt,
code,
kbd,
samp {
  line-height: inherit;
  font-family: inherit;
}

h1,
h2,
h3,
h4,
h5,
h6,
small,
big,
input,
textarea,
button,
select {
  font-size: inherit;
}

address,
cite,
dfn,
em,
i,
optgroup,
var {
  font-style: normal;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
  table-layout: fixed;
  text-align: left;
}

ul,
ol,
menu {
  list-style: none;
}

fieldset,
img {
  border: 0;
  vertical-align: middle;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  display: block;
}

audio,
canvas,
video {
  display: inline-block;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: "\0020";
}

textarea,
pre,
xmp {
  overflow: auto;
  -webkit-overflow-scrolling: touch;
}

textarea {
  resize: vertical;
}

input,
textarea,
button,
select
a {
  outline: 0 none;
}

input,
textarea,
button,
select {
  color: inherit;
}
input:disabled,
textarea:disabled,
button:disabled,
select:disabled {
  opacity: 1;
}

button::-moz-focus-inner,
input::-moz-focus-inner {
  padding: 0;
  border: 0;
}

input[type="button"],
input[type="submit"],
input[type="reset"],
input[type="file"]::-webkit-file-upload-button,
input[type="search"]::-webkit-search-cancel-button {
  -webkit-appearance: none;
  appearance: none;
}

mark {
  background-color: transparent;
}

a,
ins,
s,
u,
del {
  text-decoration: none;
}

a,
img {
  -webkit-touch-callout: none;
}

a {
  color: #00afc7;
}

.g-clear::after,
.g-mod::after {
  display: block;
  overflow: hidden;
  clear: both;
  height: 0;
  content: "\0020";
}

@font-face {
  font-family: yofont;
  src: url("http://source.qunarzz.com/fonts/yo/1.0.0/yofont.woff") format("woff"), url("http://source.qunarzz.com/fonts/yo/1.0.0/yofont.ttf") format("truetype");
}
.yo-ico {
  font-family: yofont !important;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  vertical-align: middle;
}

/**
 * Yo框架layout
 -----------------------
 * Yo内置的布局方式
 *
 * @class layout
 * @module Yo
 */
/**
 * @class layout
 */
/**
 * 构造独立区块布局
 -----------------------
 * 使用方法，详见 [Demo](http://doyoe.github.io/Yo/demo/layout/yo-stacked.html)
 * @method yo-stacked
 * @param {defailt | String} $name 定义名称
 * @param {defailt | Color} $margin 定义外边距
 */
.yo-stacked {
  display: block;
  margin: 0.2rem 0.1rem;
}

/**
 * @class layout
 */
/**
 * 构造弹性布局使用方法，可以是横向和纵向
 -----------------------
 * 使用方法，详见 [Demo](http://doyoe.github.io/Yo/demo/layout/yo-flex.html)
 * @method yo-flex
 * @param {String} $name 为新的扩展定义一个名称
 * @param {String} $box 指定块级或者行级弹性盒
 * @param {String} $direction 指定是水平或者垂直布局
 */
.yo-flex {
  height: 100%;
}
.yo-flex,
.yo-flex .flex-inherit {
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
  flex-direction: column;
  overflow: hidden;
}
.yo-flex > .flex,
.yo-flex .flex-inherit,
.yo-flex .flex-inherit > .flex {
  -webkit-box-flex: 1;
  -webkit-flex: 1;
  flex: 1;
  height: .1px;
  position: relative;
}
.yo-flex > .flex,
.yo-flex .flex-inherit > .flex {
  overflow: auto;
  -webkit-overflow-scrolling: touch;
}
.yo-flex > .flex > .yo-flex,
.yo-flex .flex-inherit > .flex > .yo-flex {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

/**
 * @class layout
 */
/**
 * 构造弹性布局内容对齐使用方法，可以是横向和纵向
 -----------------------
 * 使用方法，详见 [Demo](http://doyoe.github.io/Yo/demo/layout/yo-align.html)
 * @method yo-align
 * @param {String} $name 为新的扩展定义一个名称
 * @param {String} $text-align 指定水平对齐方式
 * @param {String} $vertical-align 指定垂直对齐方式
 */
.yo-align {
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  -webkit-box-align: center;
  -webkit-align-items: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
}

/**
* document layout
* Author: joy.du(飘零雾雨)
* Time: 2013.10.17
*/
/**
 * Yo框架fragment基础构造
 -----------------------
 * Yo内置了包括：dialog, popup, tip, tab, switch, rating等基础组件
 *
 * @class fragment
 * @module Yo
 */
/**
 * @class fragment
 */
/**
 * 构造头的自定义使用方法
 -----------------------
 * 使用方法，详见 [Demo](http://doyoe.github.io/Yo/demo/fragment/yo-header.html)
 * @method yo-header
 * @param {String} $name 定义yo-header名称
 * @param {Length} $height 定义yo-header高度
 * @param {Length} $item-width 定义yo-header两侧子项宽度
 * @param {Length} $item-space 定义yo-header两侧子项离边界的间隙
 * @param {Color} $bordercolor 定义yo-header边框色
 * @param {Color} $bgcolor 定义yo-header背景色
 * @param {Color} $color 定义yo-header文本色
 * @param {Length} $font-size 定义yo-header文本大小
 * @param {Color} $item-color 定义yo-header两侧的子项文本色
 * @param {Color} $item-ico-color 定义yo-header两侧的ico色
 * @param {Length} $item-font-size 定义yo-header两侧的子项文本大小
 * @param {Length} $item-ico-size 定义yo-header两侧的ico大小
 */
.yo-header {
  position: relative;
  height: 0.44rem;
  line-height: 0.44rem;
  border-bottom: 1px solid #1ba9ba;
  background-color: #1ba9ba;
  color: #fff;
  font-size: 0.18rem;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  text-align: center;
}
.yo-header > .title {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  margin: 0 0.6rem;
}
.yo-header > .regret,
.yo-header > .affirm {
  position: absolute;
  top: 0;
  width: 0.6rem;
  cursor: pointer;
  font-size: 0.14rem;
}
.yo-header > .regret:active,
.yo-header > .affirm:active {
  opacity: .5;
}
.yo-header > .regret.yo-ico,
.yo-header > .regret > .yo-ico,
.yo-header > .affirm.yo-ico,
.yo-header > .affirm > .yo-ico {
  color: #7ff;
  font-size: 0.2rem;
}
.yo-header > .regret {
  left: 0;
  padding-left: 0.15rem;
  text-align: left;
}
.yo-header > .affirm {
  right: 0;
  padding-right: 0.15rem;
  text-align: right;
}

/**
 * Fragment扩展: yo-header-normal
 * Author: joy.du(飘零雾雨)
 * Time: 2015.1.16
 */
.yo-header-normal {
  border-color: #ddd;
  background-color: #eee;
  color: #212121;
}
.yo-header-normal > .regret.yo-ico,
.yo-header-normal > .regret > .yo-ico,
.yo-header-normal > .affirm.yo-ico,
.yo-header-normal > .affirm > .yo-ico {
  color: #212121;
}

.m-layer {
  position: relative;
}

/**
 * module: m-desc
 * Author: joy.du(飘零雾雨)
 * Time: 2015.6.17
 */
.m-desc {
  margin: .1rem;
  padding-bottom: .05rem;
  border-radius: .05rem;
  background-color: #ddd;
}
.m-desc > .title {
  padding: .18rem .1rem .03rem;
  border-bottom: 1px solid #ccc;
}
.m-desc > xmp {
  margin: .1rem;
  padding: .1rem;
  background-color: #666;
  color: #fff;
}
.m-desc .sub-title {
  margin: 0 .1rem;
  padding: .1rem 0 .03rem;
  border-bottom: 1px solid #ccc;
}
.m-desc .sub-title::before {
  margin-right: .05rem;
  padding: 0 .03rem;
  border-radius: .03rem;
  content: "Note";
  font-weight: normal;
  background-color: #f9c027;
  color: #fff;
}
.m-desc .info {
  margin: .1rem;
}

/**
 * module: m-code
 * Author: joy.du(飘零雾雨)
 * Time: 2013.10.17
 */
.m-code {
  -webkit-user-select: text;
  user-select: text;
  margin: .1rem;
  padding: .1rem;
  border-radius: 5px;
  background: #272822;
  color: #51bbe1;
  font-size: .2rem;
}
.m-code .method {
  color: #93de08;
}
.m-code .bracket,
.m-code .colon {
  padding-right: 5px;
  color: #fff;
}
.m-code mark {
  color: #ccc;
  font-size: .14rem;
}

/**
 * Yo框架widget基础构造
 -----------------------
 * Yo内置了常见的通用代码片段，如：列表，表格，按钮组，头
 *
 * @class widget
 * @module Yo
 */
/**
 * Yo框架element基础构造
 -----------------------
 * Yo内置了包括按钮，输入框，单选，多选，区间，分值等基础元素
 *
 * @class element
 * @module Yo
 */
/**
 * @class element
 */
/**
 * 构造按钮的自定义使用方法，可轻松自定义边框，尺寸，背景，文字等
 -----------------------
 * 使用方法，详见 [Demo](http://doyoe.github.io/Yo/demo/element/yo-btn.html)
 * @method yo-btn
 * @param {String} $name 为新的按钮扩展定义一个名称
 * @param {Length} $border-width 按钮边框厚度
 * @param {Color} $bordercolor 按钮边框色
 * @param {Color} $bgcolor 按钮背景色
 * @param {Color} $color 按钮文本色
 * @param {Color} $active-bordercolor 触点（鼠标，手指或其它）按下时的按钮边框色
 * @param {Color} $active-bgcolor 触点（鼠标，手指或其它）按下的按钮背景色
 * @param {Color} $active-color 触点（鼠标，手指或其它）按下的按钮文本色
 * @param {Length} $padding 按钮内补白
 * @param {Length} $radius 按钮圆角半径长度
 * @param {Length} $font-size 按钮字号大小
 * @param {Length} $width 按钮宽度
 * @param {Length} $height 按钮高度
 */
.yo-btn {
  display: inline-block;
  overflow: hidden;
  padding: 0 1.2em;
  vertical-align: top;
  border-width: 1px;
  border-style: solid;
  border-color: #e26704;
  border-radius: 0.02rem;
  -webkit-background-clip: padding-box !important;
  background-clip: padding-box !important;
  background-color: #ff801a;
  color: #fff;
  text-align: center;
  cursor: pointer;
}
.yo-btn-disabled {
  opacity: 1;
  cursor: not-allowed;
}
.yo-btn-disabled, .yo-btn-disabled:focus, .yo-btn-disabled:active {
  border-color: #ccc;
  background-color: #e0e0e0;
  color: #bbb;
}
.yo-btn-s {
  height: 0.28rem;
  line-height: 0.28rem;
  font-size: 0.12rem;
}
.yo-btn-m {
  height: 0.36rem;
  line-height: 0.36rem;
  font-size: 0.14rem;
}
.yo-btn-l {
  height: 0.44rem;
  line-height: 0.44rem;
  font-size: 0.16rem;
}
.yo-btn-stacked {
  display: block;
  width: 100%;
}

/**
 * @class widget
 */
/**
 * 构造列表的自定义使用方法
 -----------------------
 * 使用方法，详见 [Demo](http://doyoe.github.io/Yo/demo/widget/yo-dialog.html)
 * @method yo-dialog
 * @param {default | String} $name 定义dialog名称
 * @param {default | Length | null} $width 定义dialog宽度
 * @param {default | Length} $height 定义dialog高度
 * @param {default | Length} $radius 定义dialog圆角
 * @param {default | Number} $shadow-opacity 定义dialog阴影透明度
 * @param {default | Color} $bordercolor 定义dialog边框色
 * @param {default | Length} $hd-height 定义dialog头部高度
 * @param {default | Color} $hd-bgcolor 定义dialog头部背景色
 * @param {default | Color} $title-color 定义dialog标题文本色
 * @param {default | Length} $title-font-size 定义dialog标题字号
 * @param {default | Length} $bd-padding 定义dialog主体补白
 * @param {default | Length} $bd-font-size 定义dialog主体字号
 */
.yo-dialog {
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
  flex-direction: column;
  position: fixed;
  z-index: 1001;
  overflow: hidden;
  border-radius: 0.05rem;
  -webkit-background-clip: padding-box !important;
  background-clip: padding-box !important;
  box-shadow: 0 0 5px rgba(204, 204, 204, 0.5);
  border: 1px solid #ccc;
  min-width: 2.8rem;
  max-width: 90%;
  height: 3rem;
  background: #fff;
  text-align: center;
}
.yo-dialog > .hd {
  position: relative;
  height: 0.44rem;
  background: white;
  line-height: 0.44rem;
}
.yo-dialog > .hd .title {
  overflow: hidden;
  height: 100%;
  margin: 0 60px;
  font-size: 0.16rem;
}
.yo-dialog > .hd .regret,
.yo-dialog > .hd .affirm {
  position: absolute;
  top: 0;
}
.yo-dialog > .hd .regret {
  left: .1rem;
}
.yo-dialog > .hd .affirm {
  right: .1rem;
}
.yo-dialog > .bd {
  -webkit-box-flex: 1;
  -webkit-flex: 1;
  flex: 1;
  height: .1px;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  min-height: .45rem;
  padding: 0.1rem;
  font-size: 0.16rem;
}
.yo-dialog > .ft {
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  text-align: center;
}
.yo-dialog > .ft .yo-btn {
  border-radius: 0;
  border-width: 1px 0 0;
  border-color: #ccc;
  background-color: #fff;
  color: #00afc7;
  display: block;
  -webkit-box-flex: 1;
  -webkit-flex: 1;
  flex: 1;
  width: .1px;
}
.yo-dialog > .ft .yo-btn:active {
  background-color: #f9f9f9;
}
.yo-dialog > .ft .yo-btn:last-child:not(:only-child), .yo-dialog > .ft .yo-btn:only-child {
  font-weight: bold;
}
.yo-dialog > .ft .yo-btn:last-child:not(:only-child) {
  border-left-width: 1px;
}

/**
 * yo-dialog扩展
 * Author: joy.du(飘零雾雨)
 * Time: 2015.1.16
 */
.yo-dialog-test {
  height: auto;
}

html,
body {
  overflow: hidden;
  height: 100%;
}

.m-layer {
  height: 3.2rem;
}
.m-layer > .yo-dialog {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
}
