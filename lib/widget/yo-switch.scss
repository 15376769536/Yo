@charset "utf-8";

// 定义switch的基础构造
@mixin _switch {
    display: inline-block;
    > input {
        display: none;
    }
    > .track {
        display: inline-block;
        position: relative;
        width: .52rem;
        height: .32rem;
        margin: 0;
        cursor: pointer;
        border: .02rem solid map-get($switch, border-color);
        @include border-radius(.16rem);
        background-color: map-get($switch, bgcolor);
        vertical-align: middle;
        @include transition(border-color .1s ease-out, background-color .1s ease-out);
        > .handle {
            position: absolute;
            z-index: 1000;
            top: 0;
            left: 0;
            @include square(.28rem);
            border-radius: 50%;
            background-color: map-get($switch, ball-color);
            box-shadow: 0 2px 5px rgba(0, 0, 0, .3);
            @include transition(transform .1s ease-out);
            -webkit-transform: translate(0, 0); // samsung s4 4.4.2 如果写了Z或者3D，元素的边框及背景色无法被圆角化
            transform: translate(0, 0) translatez(0);
        }
    }
    > input:checked + .track {
        border-color: map-get($switch, checked-border-color);
        background-color: map-get($switch, checked-bgcolor);
        > .handle {
            -webkit-transform: translate(.2rem, 0);
            transform: translate(.2rem, 0) translatez(0);
        }
    }
    > input:disabled + .track {
        opacity: .4;
        border-color: map-get($base, disabled-border-color);
        background-color: map-get($base, disabled-border-color);
    }
}

/**
 * @module widget
 * @method yo-switch
 * @version 1.0.0
 * @description 构造yo-switch的自定义使用方法
 * @demo http://doyoe.github.io/Yo/demo/widget/yo-switch.html
 * @param {String} $name 定义扩展名称 {add:1.0.0}
 * @param {Color} $checked-bordercolor 定义switch激活边框色 {add:1.0.0}{del:2.0.0}
 * @param {Color} $checked-border-color 定义switch激活边框色 {add:2.0.0}
 * @param {Color} $checked-bgcolor 定义switch激活背景色 {add:1.0.0}
 * @param {Color} $bordercolor 定义switch边框色 {add:1.0.0}{del:2.0.0}
 * @param {Color} $border-color 定义switch边框色 {add:2.0.0}
 * @param {Color} $bgcolor 定义switch背景色 {add:1.0.0}
 * @param {Color} $ball-color 定义switch滑块色 {add:1.0.0}
 */

@mixin yo-switch(
    $name: default,
    $checked-border-color: default,
    $checked-bgcolor: default,
    $border-color: default,
    $bgcolor: default,
    $ball-color: default) {
    // 区别是否新增实例还是修改本身
    $name: if($name == default, "", "-#{$name}");
    // 如果值为default，则取config的定义
    @if $border-color == default {
        $border-color: map-get($switch, border-color);
    }
    @if $bgcolor == default {
        $bgcolor: map-get($switch, bgcolor);
    }
    @if $ball-color == default {
        $ball-color: map-get($switch, ball-color);
    }
    @if $checked-border-color == default {
        $checked-border-color: map-get($switch, checked-border-color);
    }
    @if $checked-bgcolor == default {
        $checked-bgcolor: map-get($switch, checked-bgcolor);
    }
    .yo-switch#{$name} {
        > .track {
            @if $border-color != map-get($switch, border-color) {
                border-color: $border-color;
            }
            @if $bgcolor != map-get($switch, bgcolor) {
                background-color: $bgcolor;
            }
            > .handle {
                @if $ball-color != map-get($switch, ball-color) {
                    background-color: $ball-color;
                }
            }
        }
        > input:checked + .track {
            @if $checked-border-color != map-get($switch, checked-border-color) {
                border-color: $checked-border-color;
            }
            @if $checked-bgcolor != map-get($switch, checked-bgcolor) {
                background-color: $checked-bgcolor;
            }
        }
        // 增量扩展
        @content;
    }
}

// 调用本文件时载入switch基础构造
.yo-switch {
    @include _switch;
}